{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/14_sending_http_requests/06-preparing-the-project-for-the-next-steps/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [addMovieError, setAddMovieError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      // console.log(data)\n\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler(loadedMovies);\n  }, [fetchMoviesHandler]);\n  async function addMovieHandler(movie) {\n    setAddMovieError(null);\n    try {\n      const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/movies.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      setAddMovieError(error.message);\n    }\n  }\n\n  // async function addMovieHandler(movie) {\n  //   const response = await fetch('https://react-http-6b4a6.firebaseio.com/movies.json', {\n  //     method: 'POST',\n  //     body: JSON.stringify(movie),\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   });\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this);\n  }\n  let addMovieContent = /*#__PURE__*/_jsxDEV(AddMovie, {\n    onAddMovie: addMovieHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 25\n  }, this);\n  if (addMovieError) {\n    addMovieContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: addMovieError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: addMovieContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Llh6au1Cnt5BxyG2iBtjRs9oZZs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","addMovieError","setAddMovieError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","content","length","addMovieContent"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/14_sending_http_requests/06-preparing-the-project-for-the-next-steps/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [addMovieError, setAddMovieError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      // console.log(data)\n\n      const loadedMovies = []\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        })\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler(loadedMovies);\n  }, [fetchMoviesHandler]);\n\n\n  async function addMovieHandler(movie) {\n    setAddMovieError(null);\n    try {\n      const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/movies.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      console.log(data)\n\n    }\n    catch (error) {\n      setAddMovieError(error.message)\n    }\n  }\n\n  // async function addMovieHandler(movie) {\n  //   const response = await fetch('https://react-http-6b4a6.firebaseio.com/movies.json', {\n  //     method: 'POST',\n  //     body: JSON.stringify(movie),\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   });\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  let addMovieContent = <AddMovie onAddMovie={addMovieHandler} />\n\n  if (addMovieError) {\n    addMovieContent = <p>{addMovieError}</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        {addMovieContent}\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}