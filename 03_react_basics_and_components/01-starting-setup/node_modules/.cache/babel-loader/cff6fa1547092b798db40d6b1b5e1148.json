{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/03_react_basics_and_components/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // below is object created in order to use one state for the form\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value); // setUserInput({\n    //   // the ...prevState takes an object, takes out the key value pairs and adds them to a new object\n    //   // This is so the enteredAmount and enteredDate do not get overwritten\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.saveExpenseData;\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          value: enteredDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","saveExpenseData"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/03_react_basics_and_components/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport './ExpenseForm.css';\n\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  // below is object created in order to use one state for the form\n\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n\n  const titleChangeHandler = (event) => {\n      setEnteredTitle(event.target.value)\n      // setUserInput({\n      //   // the ...prevState takes an object, takes out the key value pairs and adds them to a new object\n      //   // This is so the enteredAmount and enteredDate do not get overwritten\n\n      // setUserInput((prevState) => {\n      //   return { ...prevState, enteredTitle: event.target.value };\n      // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value)\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value)\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.saveExpenseData\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n  <form onSubmit={submitHandler}>\n    <div className=\"new-expense__controls\">\n      <div className=\"new-expense__control\">\n        <label>Title</label>\n        {/* value={enteredTitle} is called two way binding. It clears the input after the submit button is clicked.  */}\n        <input\n          type=\"text\"\n          value={enteredTitle}\n          onChange={titleChangeHandler}\n        />\n      </div>\n      <div className=\"new-expense__control\">\n        <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\" step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n      </div>\n      <div className=\"new-expense__control\">\n        <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\" max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n      </div>\n    </div>\n    <div className=\"new-expense__actions\">\n      <button type=\"submit\">Add Expense</button>\n    </div>\n  </form>\n  )\n};\n\nexport default ExpenseForm\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,mBAAP;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C,CAH6B,CAK7B;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMS,kBAAkB,GAAIC,KAAD,IAAW;IAClCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CADkC,CAElC;IACA;IACA;IAEA;IACA;IACA;EACH,CATD;;EAWA,MAAMC,mBAAmB,GAAIH,KAAD,IAAW;IACrCJ,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;EACD,CAFD;;EAIA,MAAME,iBAAiB,GAAIJ,KAAD,IAAW;IACnCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMG,aAAa,GAAIL,KAAD,IAAW;IAC/BA,KAAK,CAACM,cAAN;IAEA,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAEf,YADW;MAElBgB,MAAM,EAAEd,aAFU;MAGlBe,IAAI,EAAE,IAAIC,IAAJ,CAASd,WAAT;IAHY,CAApB;IAKAL,KAAK,CAACoB,eAAN;IACAlB,eAAe,CAAC,EAAD,CAAf;IACAE,gBAAgB,CAAC,EAAD,CAAhB;IACAE,cAAc,CAAC,EAAD,CAAd;EACD,CAZD;;EAcA,oBACA;IAAM,QAAQ,EAAEO,aAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAGE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAEZ,YAFT;UAGE,QAAQ,EAAEM;QAHZ;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEI;UACE,IAAI,EAAC,QADP;UAEE,GAAG,EAAC,MAFN;UAEa,IAAI,EAAC,MAFlB;UAGE,KAAK,EAAEJ,aAHT;UAIE,QAAQ,EAAEQ;QAJZ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,eAmBE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEI;UACE,IAAI,EAAC,MADP;UAEE,GAAG,EAAC,YAFN;UAEmB,GAAG,EAAC,YAFvB;UAGE,KAAK,EAAEN,WAHT;UAIE,QAAQ,EAAEO;QAJZ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eA8BE;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA9BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAoCD,CAlFD;;GAAMb,W;;KAAAA,W;AAoFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}