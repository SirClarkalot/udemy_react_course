{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A first Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/b/bb/The_Bund_1.jpg\",\n  address: \"The Bund Shanghai\",\n  description: \"This is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"A second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/8/88/Shanghai%27s_Bund_District_2.jpg\",\n  address: \"The Bund Shanghai\",\n  description: \"This is a second meetup\"\n}, {\n  id: \"m3\",\n  title: \"A third Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/6/67/The_Bund%2C_Shanghai%2C_c1890s.jpg\",\n  address: \"The Bund Shanghai\",\n  description: \"This is a third meetup\"\n}];\n\nfunction HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsx(MeetupList, {\n    meetups: props.meetups\n  });\n} // Below function needs to be called 'getStaticProps'\n// NextJs looks for this name, and executes it during the pre-rendering process\n// Can be an async function\n// This code will only execute during the build, never executes client side\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  // need to return an object, with a props property that holds an object\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}