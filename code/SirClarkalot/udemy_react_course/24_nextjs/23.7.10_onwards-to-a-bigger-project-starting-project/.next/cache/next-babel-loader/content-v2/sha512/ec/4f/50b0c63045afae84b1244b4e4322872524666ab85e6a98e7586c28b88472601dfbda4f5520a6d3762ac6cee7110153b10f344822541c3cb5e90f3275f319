{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/24_nextjs/23.7.10_onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = HomePage;\n// export async function getServerSideProps(context) {\n//   // context gives you access to the request and response object\n//   // with .req and .res\n//   const req = context.req\n//   const res  = context.res\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     },\n//   }\n// }\n// Below function needs to be called 'getStaticProps'\n// NextJs looks for this name, and executes it during the pre-rendering process\n// Can be an async function\n// This code will only execute during the build, never executes client side\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/24_nextjs/23.7.10_onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["useEffect","useState","MeetupList","HomePage","props","meetups"],"mappings":";;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAHQF,Q;AAkCT;AACE;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,eAAeA,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n\n  return <MeetupList meetups={props.meetups} />;\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://seanypee24:4qSKzTKjUg0Epwe5@cluster0.idkghhp.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  // need to return an object, with a props property that holds an object\n  return {\n    props: {\n      meetups: meetups.map(meetup=> ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      })),\n    },\n    // below revalidate will re pregenerate the page every ten seconds\n    // updates the page after deployment\n    revalidate: 10,\n  };\n}\n\n// export async function getServerSideProps(context) {\n  //   // context gives you access to the request and response object\n  //   // with .req and .res\n//   const req = context.req\n//   const res  = context.res\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     },\n//   }\n// }\n\n// Below function needs to be called 'getStaticProps'\n// NextJs looks for this name, and executes it during the pre-rendering process\n// Can be an async function\n// This code will only execute during the build, never executes client side\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}