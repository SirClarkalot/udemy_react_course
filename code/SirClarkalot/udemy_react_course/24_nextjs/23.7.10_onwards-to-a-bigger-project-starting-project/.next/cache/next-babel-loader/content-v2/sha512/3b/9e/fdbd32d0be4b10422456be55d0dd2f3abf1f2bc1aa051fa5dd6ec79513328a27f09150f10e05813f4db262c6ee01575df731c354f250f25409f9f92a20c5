{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\"; // import { useEffect, useState } from \"react\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly Reactive meetups!\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://seanypee24:UgKezCSsRGLGcRuk@cluster0.idkghhp.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close(); // need to return an object, with a props property that holds an object\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // below revalidate will re pregenerate the page every ten seconds\n    // updates the page after deployment\n    revalidate: 1\n  };\n} // export async function getServerSideProps(context) {\n//   // context gives you access to the request and response object\n//   // with .req and .res\n//   const req = context.req\n//   const res  = context.res\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     },\n//   }\n// }\n// Below function needs to be called 'getStaticProps'\n// NextJs looks for this name, and executes it during the pre-rendering process\n// Can be an async function\n// This code will only execute during the build, never executes client side\n\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}