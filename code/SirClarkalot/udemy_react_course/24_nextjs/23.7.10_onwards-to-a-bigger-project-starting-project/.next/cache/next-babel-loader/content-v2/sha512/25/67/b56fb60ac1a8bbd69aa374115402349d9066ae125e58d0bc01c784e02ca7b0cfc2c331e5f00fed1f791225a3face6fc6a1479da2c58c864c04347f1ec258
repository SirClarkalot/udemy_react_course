{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/24_nextjs/23.7.10_onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A first Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/b/bb/The_Bund_1.jpg\",\n  address: \"The Bund Shanghai\",\n  description: \"This is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"A second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/8/88/Shanghai%27s_Bund_District_2.jpg\",\n  address: \"The Bund Shanghai\",\n  description: \"This is a second meetup\"\n}, {\n  id: \"m3\",\n  title: \"A third Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/6/67/The_Bund%2C_Shanghai%2C_c1890s.jpg\",\n  address: \"The Bund Shanghai\",\n  description: \"This is a third meetup\"\n}];\n\nfunction HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   // context gives you access to the request and response object\n//   // with .req and .res\n//   const req = context.req\n//   const res  = context.res\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     },\n//   }\n// }\n// Below function needs to be called 'getStaticProps'\n// NextJs looks for this name, and executes it during the pre-rendering process\n// Can be an async function\n// This code will only execute during the build, never executes client side\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  // need to return an object, with a props property that holds an object\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    },\n    // below revalidate will re pregenerate the page every ten seconds\n    // updates the page after deployment\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/24_nextjs/23.7.10_onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MongoClient","useEffect","useState","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,oEAHT;AAIEC,EAAAA,OAAO,EAAE,mBAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADoB,EAQpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,sFAJJ;AAKEC,EAAAA,OAAO,EAAE,mBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CARoB,EAgBpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,wFAJJ;AAKEC,EAAAA,OAAO,EAAE,mBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAhBoB,CAAtB;;AA0BA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA;AACA;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AAIrC;AACA;AACA,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAER;AADJ,KADF;AAIL;AACA;AACAU,IAAAA,UAAU,EAAE;AANP,GAAP;AAQD;AAED,eAAeJ,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"A first Meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/b/bb/The_Bund_1.jpg\",\n    address: \"The Bund Shanghai\",\n    description: \"This is a first meetup\",\n  },\n  {\n    id: \"m2\",\n    title: \"A second Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/8/88/Shanghai%27s_Bund_District_2.jpg\",\n    address: \"The Bund Shanghai\",\n    description: \"This is a second meetup\",\n  },\n  {\n    id: \"m3\",\n    title: \"A third Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/6/67/The_Bund%2C_Shanghai%2C_c1890s.jpg\",\n    address: \"The Bund Shanghai\",\n    description: \"This is a third meetup\",\n  },\n];\n\nfunction HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// export async function getServerSideProps(context) {\n//   // context gives you access to the request and response object\n//   // with .req and .res\n//   const req = context.req\n//   const res  = context.res\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     },\n//   }\n// }\n\n// Below function needs to be called 'getStaticProps'\n// NextJs looks for this name, and executes it during the pre-rendering process\n// Can be an async function\n// This code will only execute during the build, never executes client side\n\nexport async function getStaticProps() {\n\n\n\n  // fetch data from an API\n  // need to return an object, with a props property that holds an object\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    },\n    // below revalidate will re pregenerate the page every ten seconds\n    // updates the page after deployment\n    revalidate: 10\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}