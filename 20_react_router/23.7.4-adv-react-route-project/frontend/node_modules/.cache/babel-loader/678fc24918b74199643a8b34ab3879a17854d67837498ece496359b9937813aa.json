{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/20_react_router/23.7.4-adv-react-route-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n\n  // if (data.isError) {\n  //   return <p>{data.message}</p>\n  // }\n  // const events = data.events;\n\n  return (\n    /*#__PURE__*/\n    // <EventsList events={events} />\n    _jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loadEvents() {\n  const response = await fetch('http://localhost:8080/events/');\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message: \"Could not fetch events!\"}), {\n    //   status: 500,\n    // })\n    throw json({\n      message: \"Could not fetch events!\"\n    }, {\n      status: 500\n    });\n    // return { isError: true, message: \"Could not fetch events!\"}\n    // throw { message: 'Could not fetch events'};\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  // cannot use React hooks in the loader function\n  // Can use any default browser features\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/20_react_router/23.7.4-adv-react-route-project/frontend/src/pages/Events.js"],"sourcesContent":["import { json, useLoaderData, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\n\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  // if (data.isError) {\n  //   return <p>{data.message}</p>\n  // }\n  // const events = data.events;\n\n  return (\n    // <EventsList events={events} />\n    <Suspense fallback={<p style={{textAlign: 'center'}}>Loading...</p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default EventsPage;\n\nexport async function loadEvents() {\n  const response = await fetch('http://localhost:8080/events/');\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message: \"Could not fetch events!\"}), {\n    //   status: 500,\n    // })\n    throw json(\n      { message: \"Could not fetch events!\" },\n      {\n        status: 500,\n      }\n    );\n    // return { isError: true, message: \"Could not fetch events!\"}\n    // throw { message: 'Could not fetch events'};\n  } else {\n    const resData = await response.json()\n    return resData.events;\n  }\n}\n\nexport function loader() {\n  // cannot use React hooks in the loader function\n  // Can use any default browser features\n  return defer({\n    events: loadEvents()\n  })\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGT,aAAa,CAAC,CAAC;;EAElC;EACA;EACA;EACA;;EAEA;IAAA;IACE;IACAM,OAAA,CAACF,QAAQ;MAACM,QAAQ,eAAEJ,OAAA;QAAGK,KAAK,EAAE;UAACC,SAAS,EAAE;QAAQ,CAAE;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAJ,QAAA,eAClEP,OAAA,CAACJ,KAAK;QAACgB,OAAO,EAAET,MAAO;QAAAI,QAAA,EACnBM,YAAY,iBAAKb,OAAA,CAACH,UAAU;UAACM,MAAM,EAAEU;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;AAEf;AAACT,EAAA,CAhBQD,UAAU;EAAA,QACEP,aAAa;AAAA;AAAAoB,EAAA,GADzBb,UAAU;AAkBnB,eAAeA,UAAU;AAEzB,OAAO,eAAec,UAAUA,CAAA,EAAG;EACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAMzB,IAAI,CACR;MAAE0B,OAAO,EAAE;IAA0B,CAAC,EACtC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;IACD;IACA;EACF,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACvB,IAAI,CAAC,CAAC;IACrC,OAAO4B,OAAO,CAAClB,MAAM;EACvB;AACF;AAEA,OAAO,SAASmB,MAAMA,CAAA,EAAG;EACvB;EACA;EACA,OAAO3B,KAAK,CAAC;IACXQ,MAAM,EAAEY,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}