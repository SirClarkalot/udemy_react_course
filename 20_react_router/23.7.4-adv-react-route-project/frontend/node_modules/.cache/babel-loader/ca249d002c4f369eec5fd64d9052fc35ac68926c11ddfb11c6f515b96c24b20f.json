{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/20_react_router/23.7.4-adv-react-route-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from '../src/pages/HomePage';\nimport EventsPage, { loader as eventsLoader } from '../src/pages/Events';\nimport EventDetailPage, { loader as eventDetailLoader } from '../src/pages/EventDetailPage';\nimport NewEventPage from '../src/pages/NewEventPage';\nimport EditEventPage from '../src/pages/EditEventPage';\nimport RootLayout from './pages/RootLayout';\nimport EventsLayout from './pages/EventsLayout';\nimport ErrorPage from './pages/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: ':eventId',\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 42\n        }, this),\n        loader: eventDetailLoader\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: ':eventId/edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 47\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","eventDetailLoader","NewEventPage","EditEventPage","RootLayout","EventsLayout","ErrorPage","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","_c","$RefreshReg$"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/20_react_router/23.7.4-adv-react-route-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom'\nimport HomePage from '../src/pages/HomePage'\nimport EventsPage, { loader as eventsLoader } from '../src/pages/Events'\nimport EventDetailPage, { loader as eventDetailLoader } from '../src/pages/EventDetailPage'\nimport NewEventPage from '../src/pages/NewEventPage'\nimport EditEventPage from '../src/pages/EditEventPage'\nimport RootLayout from './pages/RootLayout'\nimport EventsLayout from './pages/EventsLayout'\nimport ErrorPage from './pages/Error'\n\nfunction App() {\n\n  const router = createBrowserRouter([\n    {\n      path: '/',\n      element: <RootLayout />,\n      errorElement: <ErrorPage/>,\n      children: [\n        { index: true, element: <HomePage /> },\n        {\n          path: 'events',\n          element: <EventsLayout />,\n          children: [\n            { index: true, element: <EventsPage />, loader: eventsLoader},\n            { path: ':eventId', element: <EventDetailPage />, loader: eventDetailLoader },\n            { path: 'new', element: <NewEventPage /> },\n            { path: ':eventId/edit', element: <EditEventPage /> },\n          ]\n        }\n      ]\n    }\n  ])\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,IAAIC,MAAM,IAAIC,YAAY,QAAQ,qBAAqB;AACxE,OAAOC,eAAe,IAAIF,MAAM,IAAIG,iBAAiB,QAAQ,8BAA8B;AAC3F,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,SAAS,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAEb,MAAMC,MAAM,GAAGhB,mBAAmB,CAAC,CACjC;IACEiB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACJ,UAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBC,YAAY,eAAET,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAC1BE,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEJ,OAAA,CAACZ,QAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACtC;MACEL,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEJ,OAAA,CAACH,YAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACzBE,QAAQ,EAAE,CACR;QAAEC,KAAK,EAAE,IAAI;QAAEP,OAAO,eAAEJ,OAAA,CAACX,UAAU;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAElB,MAAM,EAAEC;MAAY,CAAC,EAC7D;QAAEY,IAAI,EAAE,UAAU;QAAEC,OAAO,eAAEJ,OAAA,CAACR,eAAe;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAElB,MAAM,EAAEG;MAAkB,CAAC,EAC7E;QAAEU,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACN,YAAY;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,EAC1C;QAAEL,IAAI,EAAE,eAAe;QAAEC,OAAO,eAAEJ,OAAA,CAACL,aAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC;IAEzD,CAAC;EAEL,CAAC,CACF,CAAC;EACF,oBAAOR,OAAA,CAACb,cAAc;IAACe,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACI,EAAA,GAvBQX,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}