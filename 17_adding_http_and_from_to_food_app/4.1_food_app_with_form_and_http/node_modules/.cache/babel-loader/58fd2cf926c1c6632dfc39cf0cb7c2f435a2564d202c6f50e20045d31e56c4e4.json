{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { useInput } from '../use-input.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isNotFiveChars = value => value.trim().length !== 5;\nconst Checkout = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    isValid: enteredNameIsValid,\n    reset: resetNameInput\n  } = useInput(!isEmpty);\n\n  // const [formInputsValidity, setFormInputsValidity] = useState({\n  //   name: true,\n  //   street: true,\n  //   postal: true,\n  //   city: true\n  // });\n\n  // const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n\n    // const enteredName = nameInputRef.current.value;\n    // const enteredStreet = streetInputRef.current.value;\n    // const enteredPostal = postalInputRef.current.value;\n    // const enteredCity = cityInputRef.current.value;\n\n    // const enteredNameIsValid = !isEmpty(enteredName);\n    // const enteredStreetIsValid = !isEmpty(enteredStreet);\n    // const enteredCityIsValid = !isEmpty(enteredCity);\n    // const enteredPostalIsValid = !isNotFiveChars(enteredPostal)\n\n    // setFormInputsValidity({\n    //   name: enteredNameIsValid,\n    //   street: enteredStreetIsValid,\n    //   postal: enteredPostalIsValid,\n    //   city: enteredCityIsValid\n    // })\n\n    const formIsValid = enteredNameIsValid;\n    // enteredStreetIsValid &&\n    // enteredPostalIsValid &&\n    // enteredCityIsValid;\n\n    if (formIsValid) {\n      resetNameInput();\n      // submit cart data\n    }\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameBlurHandler,\n        onChange: nameChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"1PvhP/76cgbwGpLj9OHNPC4GMiE=\", false, function () {\n  return [useInput];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","useInput","jsxDEV","_jsxDEV","isEmpty","value","trim","isNotFiveChars","length","Checkout","props","_s","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","isValid","enteredNameIsValid","reset","resetNameInput","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","formIsValid","nameInputClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onBlur","onChange","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { useInput } from '../use-input.js'\n\nconst isEmpty = value => value.trim() === '';\nconst isNotFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    isValid: enteredNameIsValid,\n    reset: resetNameInput\n  } = useInput(!isEmpty)\n\n  // const [formInputsValidity, setFormInputsValidity] = useState({\n  //   name: true,\n  //   street: true,\n  //   postal: true,\n  //   city: true\n  // });\n\n  // const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    // const enteredName = nameInputRef.current.value;\n    // const enteredStreet = streetInputRef.current.value;\n    // const enteredPostal = postalInputRef.current.value;\n    // const enteredCity = cityInputRef.current.value;\n\n    // const enteredNameIsValid = !isEmpty(enteredName);\n    // const enteredStreetIsValid = !isEmpty(enteredStreet);\n    // const enteredCityIsValid = !isEmpty(enteredCity);\n    // const enteredPostalIsValid = !isNotFiveChars(enteredPostal)\n\n    // setFormInputsValidity({\n    //   name: enteredNameIsValid,\n    //   street: enteredStreetIsValid,\n    //   postal: enteredPostalIsValid,\n    //   city: enteredCityIsValid\n    // })\n\n\n    const formIsValid =\n      enteredNameIsValid\n    // enteredStreetIsValid &&\n    // enteredPostalIsValid &&\n    // enteredCityIsValid;\n\n    if (formIsValid) {\n      resetNameInput();\n      // submit cart data\n    }\n  };\n\n  const nameInputClasses = nameInputHasError\n  ? 'form-control invalid' :\n  'form-control';\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div\n        className={nameInputClasses}\n      >\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onBlur={nameBlurHandler}\n          onChange={nameChangeHandler}\n          value={enteredName}\n        />\n        {!enteredNameIsValid && <p>Please enter a valid name!</p>}\n      </div>\n      {/* <div className={`${classes.control} ${formInputsValidity.street ?\n        '' : classes.invalid\n        }`}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.postal ?\n        '' : classes.invalid\n        }`}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalInputRef} />\n        {!formInputsValidity.postal && <p>Please enter a valid postal code (five characters long) !</p>}\n\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.city ?\n        '' : classes.invalid\n        }`}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n\n      </div> */}\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}