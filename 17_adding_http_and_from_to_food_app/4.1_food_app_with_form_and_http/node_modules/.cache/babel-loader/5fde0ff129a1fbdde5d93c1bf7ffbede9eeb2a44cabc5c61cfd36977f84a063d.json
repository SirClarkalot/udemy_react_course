{"ast":null,"code":"var _s = $RefreshSig$();\n// import Card from '../UI/Card';\n// import MealItem from './MealItem/MealItem';\n// import classes from './AvailableMeals.module.css';\nimport { useState, useEffect } from 'react';\nconst AvailableMeals = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function fetchMeals() {\n      setIsLoading(true);\n      try {\n        const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/meals.json');\n        if (!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    setIsLoading(false);\n    fetchMeals();\n  }, []);\n  console.log(data);\n\n  //   const mealsList = data.map((meal) => (\n  //     <MealItem\n  //       key={meal.id}\n  //       id={meal.id}\n  //       name={meal.name}\n  //       description={meal.description}\n  //       price={meal.price}\n  //     />\n  //   ));\n\n  // return (\n  //   <section className={classes.meals}>\n  //     <Card>\n  //       <ul>{mealsList}</ul>\n  //     </Card>\n  //   </section>\n  // );\n};\n_s(AvailableMeals, \"Z13ypikzFvIaMkfWsYSxlopgxyA=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useState","useEffect","AvailableMeals","_s","data","setData","isLoading","setIsLoading","fetchMeals","response","fetch","ok","Error","json","error","console","log","_c","$RefreshReg$"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Meals/AvailableMeals.js"],"sourcesContent":["// import Card from '../UI/Card';\n// import MealItem from './MealItem/MealItem';\n// import classes from './AvailableMeals.module.css';\nimport { useState, useEffect } from 'react';\n\n\nconst AvailableMeals = () => {\n  const [data, setData] = useState([])\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMeals() {\n      setIsLoading(true)\n      try {\n        const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/meals.json');\n        if (!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n\n        const data =  await response.json();\n        setData(data)\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    setIsLoading(false)\n    fetchMeals()\n  }, [])\n\n  console.log(data)\n\n\n\n  //   const mealsList = data.map((meal) => (\n  //     <MealItem\n  //       key={meal.id}\n  //       id={meal.id}\n  //       name={meal.name}\n  //       description={meal.description}\n  //       price={meal.price}\n  //     />\n  //   ));\n\n  // return (\n  //   <section className={classes.meals}>\n  //     <Card>\n  //       <ul>{mealsList}</ul>\n  //     </Card>\n  //   </section>\n  // );\n};\n\nexport default AvailableMeals;\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAG3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,eAAeO,UAAUA,CAAA,EAAG;MAC1BD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wEAAwE,CAAC;QACtG,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAMR,IAAI,GAAI,MAAMK,QAAQ,CAACI,IAAI,EAAE;QACnCR,OAAO,CAACD,IAAI,CAAC;MAEf,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF;IACAP,YAAY,CAAC,KAAK,CAAC;IACnBC,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAENO,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;;EAIjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACD,EAAA,CA7CID,cAAc;AAAAe,EAAA,GAAdf,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}