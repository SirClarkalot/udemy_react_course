{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\n// import { useRef, useState } from 'react';\nimport useInput from '../../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() !== '';\nconst isFiveChars = value => value.trim().length !== 5;\nconst Checkout = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    isValid: enteredNameIsValid,\n    reset: resetNameInput\n  } = useInput(isEmpty);\n  const {\n    value: enteredStreet,\n    hasError: streetInputHasError,\n    valueChangeHandler: streetChangeHandler,\n    inputBlurHandler: streetBlurHandler,\n    isValid: enteredStreetIsValid,\n    reset: resetStreetInput\n  } = useInput(isEmpty);\n  const {\n    value: enteredPostal,\n    hasError: postalInputHasError,\n    valueChangeHandler: postalChangeHandler,\n    inputBlurHandler: postalBlurHandler,\n    isValid: enteredPostalIsValid,\n    reset: resetPostalInput\n  } = useInput(isEmpty);\n\n  // const [formInputsValidity, setFormInputsValidity] = useState({\n  //   name: true,\n  //   street: true,\n  //   postal: true,\n  //   city: true\n  // });\n\n  // const nameInputRef = useRef();\n  // const streetInputRef = useRef();\n  // const postalInputRef = useRef();\n  // const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n\n    // const enteredName = nameInputRef.current.value;\n    // const enteredStreet = streetInputRef.current.value;\n    // const enteredPostal = postalInputRef.current.value;\n    // const enteredCity = cityInputRef.current.value;\n\n    // const enteredNameIsValid = !isEmpty(enteredName);\n    // const enteredStreetIsValid = !isEmpty(enteredStreet);\n    // const enteredCityIsValid = !isEmpty(enteredCity);\n    // const enteredPostalIsValid = !isNotFiveChars(enteredPostal)\n\n    // setFormInputsValidity({\n    //   name: enteredNameIsValid,\n    //   street: enteredStreetIsValid,\n    //   postal: enteredPostalIsValid,\n    //   city: enteredCityIsValid\n    // })\n\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid;\n    // enteredPostalIsValid &&\n    // enteredCityIsValid;\n\n    if (formIsValid) {\n      resetNameInput();\n      resetStreetInput();\n      // submit cart data\n    }\n  };\n\n  const nameInputClasses = `${classes.control} ${nameInputHasError ? classes.invalid : ''}`;\n  const streetInputClasses = `${classes.control} ${streetInputHasError ? classes.invalid : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameBlurHandler,\n        onChange: nameChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onBlur: streetBlurHandler,\n        onChange: streetChangeHandler,\n        value: enteredStreet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), streetInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"wc8GRu4dQxSL+NhQtCd705bvNSM=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useInput","jsxDEV","_jsxDEV","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","isValid","enteredNameIsValid","reset","resetNameInput","enteredStreet","streetInputHasError","streetChangeHandler","streetBlurHandler","enteredStreetIsValid","resetStreetInput","enteredPostal","postalInputHasError","postalChangeHandler","postalBlurHandler","enteredPostalIsValid","resetPostalInput","confirmHandler","event","preventDefault","formIsValid","nameInputClasses","control","invalid","streetInputClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onBlur","onChange","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\n// import { useRef, useState } from 'react';\nimport useInput from '../../hooks/use-input';\n\nconst isEmpty = value => value.trim() !== '';\nconst isFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    isValid: enteredNameIsValid,\n    reset: resetNameInput\n  } = useInput(isEmpty)\n\n  const {\n    value: enteredStreet,\n    hasError: streetInputHasError,\n    valueChangeHandler: streetChangeHandler,\n    inputBlurHandler: streetBlurHandler,\n    isValid: enteredStreetIsValid,\n    reset: resetStreetInput\n  } = useInput(isEmpty)\n\n  const {\n    value: enteredPostal,\n    hasError: postalInputHasError,\n    valueChangeHandler: postalChangeHandler,\n    inputBlurHandler: postalBlurHandler,\n    isValid: enteredPostalIsValid,\n    reset: resetPostalInput\n  } = useInput(isEmpty)\n\n  // const [formInputsValidity, setFormInputsValidity] = useState({\n  //   name: true,\n  //   street: true,\n  //   postal: true,\n  //   city: true\n  // });\n\n  // const nameInputRef = useRef();\n  // const streetInputRef = useRef();\n  // const postalInputRef = useRef();\n  // const cityInputRef = useRef();\n\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    // const enteredName = nameInputRef.current.value;\n    // const enteredStreet = streetInputRef.current.value;\n    // const enteredPostal = postalInputRef.current.value;\n    // const enteredCity = cityInputRef.current.value;\n\n    // const enteredNameIsValid = !isEmpty(enteredName);\n    // const enteredStreetIsValid = !isEmpty(enteredStreet);\n    // const enteredCityIsValid = !isEmpty(enteredCity);\n    // const enteredPostalIsValid = !isNotFiveChars(enteredPostal)\n\n    // setFormInputsValidity({\n    //   name: enteredNameIsValid,\n    //   street: enteredStreetIsValid,\n    //   postal: enteredPostalIsValid,\n    //   city: enteredCityIsValid\n    // })\n\n\n    const formIsValid =\n      enteredNameIsValid &&\n    enteredStreetIsValid\n    // enteredPostalIsValid &&\n    // enteredCityIsValid;\n\n    if (formIsValid) {\n      resetNameInput();\n      resetStreetInput();\n      // submit cart data\n    }\n  };\n\n  const nameInputClasses = `${classes.control} ${nameInputHasError ? classes.invalid :  '' }`\n\n  const streetInputClasses = `${classes.control} ${streetInputHasError ? classes.invalid : ''}`\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div\n        className={nameInputClasses}\n      >\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onBlur={nameBlurHandler}\n          onChange={nameChangeHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p>Please enter a valid name!</p>}\n      </div>\n\n      <div className={streetInputClasses}>\n        <label htmlFor='street'>Street</label>\n        <input\n        type='text'\n        id='street'\n        onBlur={streetBlurHandler}\n        onChange={streetChangeHandler}\n        value={enteredStreet}\n        />\n        {streetInputHasError && <p>Please enter a valid street!</p>}\n      </div>\n      {/* <div className={`${classes.control} ${formInputsValidity.postal ?\n        '' : classes.invalid\n        }`}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalInputRef} />\n        {!formInputsValidity.postal && <p>Please enter a valid postal code (five characters long) !</p>}\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.city ?\n        '' : classes.invalid\n        }`}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n      </div> */}\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}