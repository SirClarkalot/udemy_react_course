{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\n// import { useRef, useState } from 'react';\nimport useInput from '../../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() !== '';\n// const isNotFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    isValid: enteredNameIsValid,\n    reset: resetNameInput\n  } = useInput(isEmpty);\n  const {\n    value: enteredStreet,\n    hasError: streetInputHasError,\n    valueChangeHandler: streetChangeHandler,\n    inputBlurHandler: streetBlurHandler,\n    isValid: enteredStreetIsValid,\n    reset: resetStreetInput\n  } = useInput(isEmpty);\n  console.log(enteredStreetIsValid);\n\n  // const [formInputsValidity, setFormInputsValidity] = useState({\n  //   name: true,\n  //   street: true,\n  //   postal: true,\n  //   city: true\n  // });\n\n  // const nameInputRef = useRef();\n  // const streetInputRef = useRef();\n  // const postalInputRef = useRef();\n  // const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n\n    // const enteredName = nameInputRef.current.value;\n    // const enteredStreet = streetInputRef.current.value;\n    // const enteredPostal = postalInputRef.current.value;\n    // const enteredCity = cityInputRef.current.value;\n\n    // const enteredNameIsValid = !isEmpty(enteredName);\n    // const enteredStreetIsValid = !isEmpty(enteredStreet);\n    // const enteredCityIsValid = !isEmpty(enteredCity);\n    // const enteredPostalIsValid = !isNotFiveChars(enteredPostal)\n\n    // setFormInputsValidity({\n    //   name: enteredNameIsValid,\n    //   street: enteredStreetIsValid,\n    //   postal: enteredPostalIsValid,\n    //   city: enteredCityIsValid\n    // })\n\n    const formIsValid = enteredNameIsValid;\n    // enteredStreetIsValid &&\n    // enteredPostalIsValid &&\n    // enteredCityIsValid;\n\n    if (formIsValid) {\n      resetNameInput();\n      resetStreetInput();\n      // submit cart data\n    }\n  };\n\n  const nameInputClasses = `${classes.control} ${nameInputHasError ? classes.invalid : ''}`;\n  const streetInputClasses = `${classes.control} ${enteredStreetIsValid ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameBlurHandler,\n        onChange: nameChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onBlur: streetBlurHandler,\n        onChange: streetChangeHandler,\n        value: enteredStreet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), streetInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"7PwTdPvyOipzZSIZlx1si6sfytE=\", false, function () {\n  return [useInput, useInput];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useInput","jsxDEV","_jsxDEV","isEmpty","value","trim","Checkout","props","_s","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","isValid","enteredNameIsValid","reset","resetNameInput","enteredStreet","streetInputHasError","streetChangeHandler","streetBlurHandler","enteredStreetIsValid","resetStreetInput","console","log","confirmHandler","event","preventDefault","formIsValid","nameInputClasses","control","invalid","streetInputClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onBlur","onChange","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\n// import { useRef, useState } from 'react';\nimport useInput from '../../hooks/use-input';\n\nconst isEmpty = value => value.trim() !== '';\n// const isNotFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    isValid: enteredNameIsValid,\n    reset: resetNameInput\n  } = useInput(isEmpty)\n\n  const {\n    value: enteredStreet,\n    hasError: streetInputHasError,\n    valueChangeHandler: streetChangeHandler,\n    inputBlurHandler: streetBlurHandler,\n    isValid: enteredStreetIsValid,\n    reset: resetStreetInput\n  } = useInput(isEmpty)\n\n\n\n  console.log(enteredStreetIsValid)\n\n\n\n  // const [formInputsValidity, setFormInputsValidity] = useState({\n  //   name: true,\n  //   street: true,\n  //   postal: true,\n  //   city: true\n  // });\n\n  // const nameInputRef = useRef();\n  // const streetInputRef = useRef();\n  // const postalInputRef = useRef();\n  // const cityInputRef = useRef();\n\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    // const enteredName = nameInputRef.current.value;\n    // const enteredStreet = streetInputRef.current.value;\n    // const enteredPostal = postalInputRef.current.value;\n    // const enteredCity = cityInputRef.current.value;\n\n    // const enteredNameIsValid = !isEmpty(enteredName);\n    // const enteredStreetIsValid = !isEmpty(enteredStreet);\n    // const enteredCityIsValid = !isEmpty(enteredCity);\n    // const enteredPostalIsValid = !isNotFiveChars(enteredPostal)\n\n    // setFormInputsValidity({\n    //   name: enteredNameIsValid,\n    //   street: enteredStreetIsValid,\n    //   postal: enteredPostalIsValid,\n    //   city: enteredCityIsValid\n    // })\n\n\n    const formIsValid =\n      enteredNameIsValid\n    // enteredStreetIsValid &&\n    // enteredPostalIsValid &&\n    // enteredCityIsValid;\n\n    if (formIsValid) {\n      resetNameInput();\n      resetStreetInput();\n      // submit cart data\n    }\n  };\n\n  const nameInputClasses = `${classes.control} ${nameInputHasError ? classes.invalid :  '' }`\n\n  const streetInputClasses = `${classes.control} ${enteredStreetIsValid ? '' : classes.invalid}`\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div\n        className={nameInputClasses}\n      >\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onBlur={nameBlurHandler}\n          onChange={nameChangeHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p>Please enter a valid name!</p>}\n      </div>\n\n      <div className={streetInputClasses}>\n        <label htmlFor='street'>Street</label>\n        <input\n        type='text'\n        id='street'\n        onBlur={streetBlurHandler}\n        onChange={streetChangeHandler}\n        value={enteredStreet}\n        />\n        {streetInputHasError && <p>Please enter a valid street!</p>}\n      </div>\n      {/* <div className={`${classes.control} ${formInputsValidity.postal ?\n        '' : classes.invalid\n        }`}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalInputRef} />\n        {!formInputsValidity.postal && <p>Please enter a valid postal code (five characters long) !</p>}\n      </div>\n      <div className={`${classes.control} ${formInputsValidity.city ?\n        '' : classes.invalid\n        }`}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n      </div> */}\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C;AACA,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,OAAO,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE;AAC5C;;AAEA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM;IACJJ,KAAK,EAAEK,WAAW;IAClBC,QAAQ,EAAEC,iBAAiB;IAC3BC,kBAAkB,EAAEC,iBAAiB;IACrCC,gBAAgB,EAAEC,eAAe;IACjCC,OAAO,EAAEC,kBAAkB;IAC3BC,KAAK,EAAEC;EACT,CAAC,GAAGnB,QAAQ,CAACG,OAAO,CAAC;EAErB,MAAM;IACJC,KAAK,EAAEgB,aAAa;IACpBV,QAAQ,EAAEW,mBAAmB;IAC7BT,kBAAkB,EAAEU,mBAAmB;IACvCR,gBAAgB,EAAES,iBAAiB;IACnCP,OAAO,EAAEQ,oBAAoB;IAC7BN,KAAK,EAAEO;EACT,CAAC,GAAGzB,QAAQ,CAACG,OAAO,CAAC;EAIrBuB,OAAO,CAACC,GAAG,CAACH,oBAAoB,CAAC;;EAIjC;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA,MAAMI,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,EAAE;;IAEtB;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAGA,MAAMC,WAAW,GACfd,kBAAkB;IACpB;IACA;IACA;;IAEA,IAAIc,WAAW,EAAE;MACfZ,cAAc,EAAE;MAChBM,gBAAgB,EAAE;MAClB;IACF;EACF,CAAC;;EAED,MAAMO,gBAAgB,GAAI,GAAEjC,OAAO,CAACkC,OAAQ,IAAGtB,iBAAiB,GAAGZ,OAAO,CAACmC,OAAO,GAAI,EAAI,EAAC;EAE3F,MAAMC,kBAAkB,GAAI,GAAEpC,OAAO,CAACkC,OAAQ,IAAGT,oBAAoB,GAAG,EAAE,GAAGzB,OAAO,CAACmC,OAAQ,EAAC;EAE9F,oBACEhC,OAAA;IAAMkC,SAAS,EAAErC,OAAO,CAACsC,IAAK;IAACC,QAAQ,EAAEV,cAAe;IAAAW,QAAA,gBACtDrC,OAAA;MACEkC,SAAS,EAAEJ,gBAAiB;MAAAO,QAAA,gBAE5BrC,OAAA;QAAOsC,OAAO,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC1C,OAAA;QACE2C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,MAAM,EAAEhC,eAAgB;QACxBiC,QAAQ,EAAEnC,iBAAkB;QAC5BT,KAAK,EAAEK;MAAY;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB,EACDjC,iBAAiB,iBAAIT,OAAA;QAAAqC,QAAA,EAAG;MAA0B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnD,eAEN1C,OAAA;MAAKkC,SAAS,EAAED,kBAAmB;MAAAI,QAAA,gBACjCrC,OAAA;QAAOsC,OAAO,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACtC1C,OAAA;QACA2C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,QAAQ;QACXC,MAAM,EAAExB,iBAAkB;QAC1ByB,QAAQ,EAAE1B,mBAAoB;QAC9BlB,KAAK,EAAEgB;MAAc;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB,EACDvB,mBAAmB,iBAAInB,OAAA;QAAAqC,QAAA,EAAG;MAA4B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvD,eAeN1C,OAAA;MAAKkC,SAAS,EAAErC,OAAO,CAACkD,OAAQ;MAAAV,QAAA,gBAC9BrC,OAAA;QAAQ2C,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAE3C,KAAK,CAAC4C,QAAS;QAAAZ,QAAA,EAAC;MAE/C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACT1C,OAAA;QAAQkC,SAAS,EAAErC,OAAO,CAACqD,MAAO;QAAAb,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAACpC,EAAA,CA7HIF,QAAQ;EAAA,QAQRN,QAAQ,EASRA,QAAQ;AAAA;AAAAqD,EAAA,GAjBR/C,QAAQ;AA+Hd,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}