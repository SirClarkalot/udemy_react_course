{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/meals.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      const loadedMeals = [];\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    try {\n      fetchMeals();\n    } catch {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  }, []);\n\n  // console.log(isLoading)\n  // console.log(meals)\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Is loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"lpPRFYL8ceDwto6m6kA7D71aHFs=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useState","useEffect","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMeals","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","message","className","MealsLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","mealsList","map","meal","_c","$RefreshReg$"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/17_adding_http_and_from_to_food_app/4.1_food_app_with_form_and_http/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useState, useEffect } from 'react';\n\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([])\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n        const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/meals.json');\n\n        if (!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n\n        const data = await response.json();\n        const loadedMeals = []\n\n        for (const key in data) {\n          loadedMeals.push({\n            id: key,\n            name: data[key].name,\n            description: data[key].description,\n            price: data[key].price\n          });\n        }\n        setMeals(loadedMeals)\n        setIsLoading(false);\n      };\n      try {\n        fetchMeals();\n      } catch {\n        setIsLoading(false);\n        setError(error.message);\n      }\n  }, []);\n\n  // console.log(isLoading)\n  // console.log(meals)\n\n  if (isLoading) {\n    return (\n      <section className={classes.MealsLoading}>\n        <p> Is loading...</p>\n      </section>\n    )\n  }\n\n  if (error) {\n    return (\n      <section className={classes.MealsLoading}>\n        <p>Error: {error}</p>\n      </section>\n    )\n  }\n\n    const mealsList = meals.map((meal) => (\n      <MealItem\n        key={meal.id}\n        id={meal.id}\n        name={meal.name}\n        description={meal.description}\n        price={meal.price}\n      />\n    ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}