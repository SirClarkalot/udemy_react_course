{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/15_building_custom_react_hooks/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js\",\n  _s = $RefreshSig$();\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttpRequest from '../../Hooks/use-http-request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttpRequest();\n  const createdTask = taskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: 'https://react-http-post-project-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        text: taskText\n      }\n    }, createdTask);\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-post-project-default-rtdb.firebaseio.com/tasks.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"leahzxRlwsE9TWlIrsZd47RIJ4s=\", false, function () {\n  return [useHttpRequest];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Section","TaskForm","useHttpRequest","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createdTask","taskData","generatedId","name","id","text","taskText","onAddTask","enterTaskHandler","url","method","headers","body","setIsLoading","setError","response","fetch","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/15_building_custom_react_hooks/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"sourcesContent":["\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttpRequest from '../../Hooks/use-http-request';\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttpRequest();\n\n  const createdTask = (taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  }\n\n  const enterTaskHandler = async (taskText) => {\n\n    sendTaskRequest({\n      url: 'https://react-http-post-project-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: { text: taskText }\n    }, createdTask);\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-http-post-project-default-rtdb.firebaseio.com/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AACA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,8BAA8B;AAAC;AAE1D,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,WAAW,EAAEC;EAAgB,CAAC,GAAGN,cAAc,EAAE;EAE3E,MAAMO,WAAW,GAAIC,QAAQ,IAAK;IAChC,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACjC,MAAMH,WAAW,GAAG;MAAEI,EAAE,EAAEF,WAAW;MAAEG,IAAI,EAAEC;IAAS,CAAC;IAEzDX,KAAK,CAACY,SAAS,CAACP,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMQ,gBAAgB,GAAG,MAAOF,QAAQ,IAAK;IAE3CP,eAAe,CAAC;MACdU,GAAG,EAAE,wEAAwE;MAC7EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE;QAAEP,IAAI,EAAEC;MAAS;IACzB,CAAC,EAAEN,WAAW,CAAC;IAEfa,YAAY,CAAC,IAAI,CAAC;IAClBC,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wEAAwE,EACxE;QACEN,MAAM,EAAE,MAAM;QACdE,IAAI,EAAEK,IAAI,CAACC,SAAS,CAAC;UAAEb,IAAI,EAAEC;QAAS,CAAC,CAAC;QACxCK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CACF;MAED,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IAEpC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAX,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACE,QAAC,OAAO;IAAA,wBACN,QAAC,QAAQ;MAAC,WAAW,EAAEL,gBAAiB;MAAC,OAAO,EAAEZ;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DC,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEd,CAAC;AAAC,GArDIH,OAAO;EAAA,QACgDD,cAAc;AAAA;AAAA,KADrEC,OAAO;AAuDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}