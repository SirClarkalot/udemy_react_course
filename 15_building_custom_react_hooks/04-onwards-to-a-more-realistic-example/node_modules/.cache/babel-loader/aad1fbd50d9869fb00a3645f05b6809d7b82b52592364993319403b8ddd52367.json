{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/15_building_custom_react_hooks/04-onwards-to-a-more-realistic-example/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport useHTTPRequest from './Hooks/use-http-request';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  // const [tasks, setTasks] = useState([]);\n\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://react-http-post-project-default-rtdb.firebaseio.com/tasks.json'\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error('Request failed!');\n  //     }\n\n  //     const data = await response.json();\n\n  //     const loadedTasks = [];\n\n  //     for (const Key in data) {\n  //       loadedTasks.push({ id: Key, text: data[Key].text });\n  //     }\n\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  const [taskHandler, setTasks, tasks, isLoading, error] = useHTTPRequest();\n\n  // const taskHandler = useHTTPRequest();\n  // const setTasks = useHTTPRequest();\n  // const tasks = useHTTPRequest();\n  // const isLoading = useHTTPRequest();\n  // const error = useHTTPRequest();\n\n  useEffect(() => {\n    taskHandler();\n  }, [taskHandler]);\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: setTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kGB/FyM4pm5HYGaj8s5d8quk+Vw=\", false, function () {\n  return [useHTTPRequest];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useHTTPRequest","Tasks","NewTask","App","taskHandler","setTasks","tasks","isLoading","error","taskAddHandler","task","prevTasks","concat"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/15_building_custom_react_hooks/04-onwards-to-a-more-realistic-example/src/App.js"],"sourcesContent":["import React, { useEffect} from 'react';\nimport useHTTPRequest from './Hooks/use-http-request';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\n\nfunction App() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  // const [tasks, setTasks] = useState([]);\n\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://react-http-post-project-default-rtdb.firebaseio.com/tasks.json'\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error('Request failed!');\n  //     }\n\n  //     const data = await response.json();\n\n\n  //     const loadedTasks = [];\n\n  //     for (const Key in data) {\n  //       loadedTasks.push({ id: Key, text: data[Key].text });\n  //     }\n\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  const [taskHandler, setTasks, tasks, isLoading, error] = useHTTPRequest();\n\n  // const taskHandler = useHTTPRequest();\n  // const setTasks = useHTTPRequest();\n  // const tasks = useHTTPRequest();\n  // const isLoading = useHTTPRequest();\n  // const error = useHTTPRequest();\n\n  useEffect(() => {\n    taskHandler();\n  }, [taskHandler]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={setTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC,OAAOC,cAAc,MAAM,0BAA0B;AAErD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,OAAO,MAAM,8BAA8B;AAAC;AAEnD,SAASC,GAAG,GAAG;EAAA;EACb;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAGA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,WAAW,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,CAAC,GAAGR,cAAc,EAAE;;EAEzE;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACdK,WAAW,EAAE;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMK,cAAc,GAAIC,IAAI,IAAK;IAC/BL,QAAQ,CAAEM,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,OAAO;MAAC,SAAS,EAAED;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACtC,QAAC,KAAK;MACJ,KAAK,EAAEH,KAAM;MACb,OAAO,EAAEC,SAAU;MACnB,KAAK,EAAEC,KAAM;MACb,OAAO,EAAEH;IAAS;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACa;AAErB;AAAC,GA5DQF,GAAG;EAAA,QAiC+CH,cAAc;AAAA;AAAA,KAjChEG,GAAG;AA8DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}