{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'INCREMENT') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'INCREASE') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'DECREMENT') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'TOGGLE')\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   return state\n// };\n\nconst store = createStore(counterSlice.reducer);\n\n// const counterSubscriber = () => {\n//   const latestState = store.getState();\n// }\n\n// store.dispatch({type: 'INCREMENT'})\n\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","increase","action","amount","decrement","toggleCounter","store","reducer"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/18_using_redux/redux-demo-project/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\nimport {createSlice, configureStore} from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter: true }\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter\n    },\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'INCREMENT') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'INCREASE') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'DECREMENT') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'TOGGLE')\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   return state\n// };\n\nconst store = createStore(counterSlice.reducer);\n\n// const counterSubscriber = () => {\n//   const latestState = store.getState();\n// }\n\n// store.dispatch({type: 'INCREMENT'})\n\nexport default store\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,QAAQA,CAACD,KAAK,EAAEE,MAAM,EAAE;MACtBF,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGQ,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,SAASA,CAACJ,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDW,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGhB,WAAW,CAACM,YAAY,CAACW,OAAO,CAAC;;AAE/C;AACA;AACA;;AAEA;;AAEA,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}