{"ast":null,"code":"import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './auth';\nimport counterReducer from './counter';\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'INCREMENT') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'INCREASE') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'DECREMENT') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'TOGGLE')\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   return state\n// };\n\n// const store = createStore(counterSlice.reducer);\nconst store = configureStore({\n  // value of reducer can be one reducer or many reducers\n  // Can create a map of reducers\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\n\n// const counterSubscriber = () => {\n//   const latestState = store.getState();\n// }\n\n// store.dispatch({type: 'INCREMENT'})\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","configureStore","authSlice","counterReducer","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/18_using_redux/redux-demo-project/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './auth';\nimport counterReducer from './counter';\n\n\n\n\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'INCREMENT') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'INCREASE') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'DECREMENT') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'TOGGLE')\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     }\n//   return state\n// };\n\n// const store = createStore(counterSlice.reducer);\nconst store = configureStore({\n  // value of reducer can be one reducer or many reducers\n  // Can create a map of reducers\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\n\n// const counterSubscriber = () => {\n//   const latestState = store.getState();\n// }\n\n// store.dispatch({type: 'INCREMENT'})\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,QAAQ;AAC9B,OAAOC,cAAc,MAAM,WAAW;;AAMtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3B;EACA;EACAI,OAAO,EAAE;IACPC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAC7BG,IAAI,EAAEN,SAAS,CAACG;EAClB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA;;AAEA,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGT,SAAS,CAACQ,OAAO;AAC5C,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}