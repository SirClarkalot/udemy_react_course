{"ast":null,"code":"const redux = require('redux');\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'INCREMENT') {\n    return {\n      counter: afterAll.counter + 1\n    };\n  }\n  return state;\n};\nconst store = redux.createStore(counterReducer);\nconst counterSubscriber = () => {\n  const latestState = store.getState();\n};\nstore.dispatch({\n  type: 'INCREMENT'\n});","map":{"version":3,"names":["redux","require","counterReducer","state","arguments","length","undefined","counter","action","type","afterAll","store","createStore","counterSubscriber","latestState","getState","dispatch"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/18_using_redux/redux-demo-project/src/store/index.js"],"sourcesContent":["const redux = require('redux')\n\nconst counterReducer = (state = {counter: 0}, action) => {\n  if (action.type === 'INCREMENT') {\n    return {\n      counter: afterAll.counter + 1\n    };\n  }\n  return state\n};\n\nconst store = redux.createStore(counterReducer);\n\nconst counterSubscriber = () => {\n  const latestState = store.getState();\n}\n\nstore.dispatch({type: 'INCREMENT'})\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAACG,OAAO,EAAE;EAAC,CAAC;EAAA,IAAEC,MAAM,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,IAAIE,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLF,OAAO,EAAEG,QAAQ,CAACH,OAAO,GAAG;IAC9B,CAAC;EACH;EACA,OAAOJ,KAAK;AACd,CAAC;AAED,MAAMQ,KAAK,GAAGX,KAAK,CAACY,WAAW,CAACV,cAAc,CAAC;AAE/C,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,WAAW,GAAGH,KAAK,CAACI,QAAQ,EAAE;AACtC,CAAC;AAEDJ,KAAK,CAACK,QAAQ,CAAC;EAACP,IAAI,EAAE;AAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}