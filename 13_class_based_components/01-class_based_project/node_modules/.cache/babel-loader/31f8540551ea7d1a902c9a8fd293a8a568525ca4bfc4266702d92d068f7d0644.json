{"ast":null,"code":"var _jsxFileName = \"/Users/seanclark/code/SirClarkalot/udemy_react_course/13_class_based_components/01-class_based_project/src/components/UserFinder.js\";\nimport { Fragment, Component } from 'react';\nimport UsersContext from '../Context/user-context';\nimport classes from './UserFinder.module.css';\nimport Users from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: ''\n    };\n  }\n\n  // if filteredUSers is set to an empty array initially\n  componentDidMount() {\n    // send http request\n    this.setState({\n      filteredUsers: this.UsersContext\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.UsersContext.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n// };\nUserFinder.contextType = UsersContext;\nexport default UserFinder;","map":{"version":3,"names":["Fragment","Component","UsersContext","classes","Users","UserFinder","constructor","state","filteredUsers","searchTerm","componentDidMount","setState","componentDidUpdate","prevProps","prevState","filter","user","name","includes","searchChangeHandler","event","target","value","render","finder","bind","contextType"],"sources":["/Users/seanclark/code/SirClarkalot/udemy_react_course/13_class_based_components/01-class_based_project/src/components/UserFinder.js"],"sourcesContent":["import { Fragment, Component } from 'react';\nimport UsersContext from '../Context/user-context';\nimport classes from './UserFinder.module.css'\nimport Users from './Users';\n\nclass UserFinder extends Component {\n\n  static contextType = UsersContext;\n\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: ''\n    };\n  }\n\n  // if filteredUSers is set to an empty array initially\n  componentDidMount() {\n    // send http request\n    this.setState({ filteredUsers: this.UsersContext });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.UsersContext.filter((user) =>\n        user.name.includes(this.state.searchTerm)\n        ),\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({ searchTerm: event.target.value })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className={classes.finder} >\n          <input type='search' onChange={this.searchChangeHandler.bind(this)} />\n        </div>\n        <Users users={this.state.filteredUsers} />\n      </Fragment>\n    );\n  }\n}\n\n// const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n\n// };\n\nexport default UserFinder;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,MAAMC,UAAU,SAASJ,SAAS,CAAC;EAIjCK,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IACd,CAAC;EACH;;EAEA;EACAC,iBAAiB,GAAG;IAClB;IACA,IAAI,CAACC,QAAQ,CAAC;MAAEH,aAAa,EAAE,IAAI,CAACN;IAAa,CAAC,CAAC;EACrD;EAEAU,kBAAkB,CAACC,SAAS,EAAEC,SAAS,EAAE;IACvC,IAAIA,SAAS,CAACL,UAAU,KAAK,IAAI,CAACF,KAAK,CAACE,UAAU,EAAE;MAClD,IAAI,CAACE,QAAQ,CAAC;QACZH,aAAa,EAAE,IAAI,CAACN,YAAY,CAACa,MAAM,CAAEC,IAAI,IAC7CA,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACX,KAAK,CAACE,UAAU,CAAC;MAE3C,CAAC,CAAC;IACJ;EACF;EAEAU,mBAAmB,CAACC,KAAK,EAAE;IACzB,IAAI,CAACT,QAAQ,CAAC;MAAEF,UAAU,EAAEW,KAAK,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EACnD;EAEAC,MAAM,GAAG;IACP,oBACE,QAAC,QAAQ;MAAA,wBACP;QAAK,SAAS,EAAEpB,OAAO,CAACqB,MAAO;QAAA,uBAC7B;UAAO,IAAI,EAAC,QAAQ;UAAC,QAAQ,EAAE,IAAI,CAACL,mBAAmB,CAACM,IAAI,CAAC,IAAI;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAClE,eACN,QAAC,KAAK;QAAC,KAAK,EAAE,IAAI,CAAClB,KAAK,CAACC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC;EAEf;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AA3DMH,UAAU,CAEPqB,WAAW,GAAGxB,YAAY;AA2DnC,eAAeG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}